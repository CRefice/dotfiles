# Environment variables
export EDITOR='vim'
export VISUAL='vim'
# Tell CMake to export compile commands for clang-tidy/clangd
export CMAKE_EXPORT_COMPILE_COMMANDS=ON

# Input/line editing bindings
# Enable vi-like line editing
bindkey -v
# Control-x-e to open current line in $EDITOR, awesome when writting functions or editing multiline commands.
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line

# Autocompletion
autoload -Uz compinit; compinit
setopt complete_aliases
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' menu select=2
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion:*:descriptions' format '%U%F{cyan}%d%f%u'

# Directory history/stack
# Keep history of `cd` as in with `pushd` and make `cd -<TAB>` work.
DIRSTACKSIZE=16
setopt autocd
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_minus

# File-manager-like navigation, with Alt-Up going to parent directory,
# and Alt-Left going back in navigation history.
cdUndoKey() {
  popd
	zle reset-prompt
	echo
	zle reset-prompt
}

cdParentKey() {
  pushd ..
	zle reset-prompt
	echo
	zle reset-prompt
}

zle -N cdParentKey
zle -N cdUndoKey
bindkey '^[^[[A' cdParentKey
bindkey '^[^[[D' cdUndoKey

# Command history
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt bang_hist                 # Treat the '!' character specially during expansion.
setopt extended_history          # Write the history file in the ":start:elapsed;command" format.
setopt inc_append_history        # Write to the history file immediately, not when the shell exits.
setopt share_history             # Share history between all sessions.
setopt hist_expire_dups_first    # Expire duplicate entries first when trimming history.
setopt hist_ignore_dups          # Don't record an entry that was just recorded again.
setopt hist_ignore_all_dups      # Delete old recorded entry if new entry is a duplicate.
setopt hist_find_no_dups         # Do not display a line previously found.
setopt hist_ignore_space         # Don't record an entry starting with a space.
setopt hist_save_no_dups         # Don't write duplicate entries in the history file.
setopt hist_reduce_blanks        # Remove superfluous blanks before recording entry.
setopt hist_verify               # Don't execute immediately upon history expansion.

# Prompt customization
autoload -Uz promptinit; promptinit
prompt spaceship
SPACESHIP_PROMPT_ORDER=(
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  venv          # virtualenv section
  exec_time     # Execution time
  line_sep      # Line break
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)
if [ -z "$DISPLAY" ]; then
	SPACESHIP_CHAR_SYMBOL='> '
else
	SPACESHIP_CHAR_SYMBOL='❯ '
fi

# GPG SSH Agent configuration
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null

# Base16 color scheme management
BASE16_SHELL=$HOME/dotfiles/base16-shell/
[[ -o interactive ]] && eval "$($BASE16_SHELL/profile_helper.sh)"

# Custom zsh functions
fpath=(~/.zsh/funcs ${fpath[@]})
autoload -Uz dev mkacd

# Useful aliases
alias make='make -j'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias g='git'

# Alias git (alias) to g(alias)
list=($(git config --get-regexp '^alias\.' \
	| sed 's/^alias\.//' \
	| cut -d' ' -f1))
for al in $list; do
	alias "g${al}"="git $al"
done

man() {
	LESS_TERMCAP_md=$'\e[01;31m' \
	LESS_TERMCAP_me=$'\e[0m' \
	LESS_TERMCAP_se=$'\e[0m' \
	LESS_TERMCAP_so=$'\e[01;44;33m' \
	LESS_TERMCAP_ue=$'\e[0m' \
	LESS_TERMCAP_us=$'\e[01;32m' \
	command man "$@"
}

# Fzf scripts
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh
export FZF_DEFAULT_COMMAND='rg --files --follow --glob "!.git/*"'

# Syntax highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

eval $(thefuck --alias)

"	General
set nocompatible
set autoread
set hidden
set history=700
set modeline
set modelines=5
filetype plugin indent on
syntax on
if has('mouse')
	set mouse=a
endif

" Backups and swapfiles
runtime var.vim " Useful variables
set viminfo='20,\"90,h,%
set dir=$DIR

set backupdir=$DIR/backup/
set nobackup

set undodir=$DIR/undo/
set undofile
set undolevels=1000
set undoreload=10000

"	Tabs, indent and text
set tabstop=2
set softtabstop=2
set shiftwidth=2
set backspace=eol,start,indent
set autoindent
set smartindent
set smarttab

" Interface
set ruler
set cursorline
set wildmenu
set completeopt-=preview
set laststatus=2
set diffopt=vertical

set hid
set lazyredraw

set mat=2
set showcmd
set nolist
set wrap
set linebreak
set breakat&vim

set noshowmode
set noerrorbells
set novisualbell

set fillchars+=vert:\

" Searching
set ignorecase
set smartcase
set hlsearch
set incsearch


" Mappings and shortcuts
set ttimeoutlen=10
let mapleader=','
let g:mapleader=','
let maplocalleader='\'

" Navigation mappings
map j gj
map k gk
noremap <Space> /

" Use sane behavior for yanking until end of line
map Y y$

" Shortcuts for writing and highlighting
map <leader>w :w<CR>
map <silent> <Leader>n :nohlsearch<CR>

" Quick search
nnoremap gs :%s/
" Replace selected text in whole buffer
xnoremap gs y:%s/<C-r>"//g<Left><Left>

" Reindent whole buffer
nnoremap g= mmgg=G`m

map <leader>l :Files<CR>
map <leader>f :Find

" Colorscheme
if filereadable(expand("~/.vimrc_background"))
	let base16colorspace=256
	source ~/.vimrc_background
endif
hi SpellBad ctermbg=01
hi SpellCap ctermbg=04

" Graphical interface
if has("gui_running")
	set guifont=Hack\ 12
	set lines=30 columns=100
	set guiheadroom=0

	set guioptions-=m  "remove menu bar
	set guioptions-=T  "remove toolbar
	set guioptions-=r  "remove right-hand scroll bar
	set guioptions-=L  "remove left-hand scroll bar
endif

" Linting/Fixing
let g:ale_lint_delay = 1000 " Reduce lint delay to once a second to save battery
let g:ale_echo_msg_format = '[%linter%] %s' "Include linter name in error statusline

let g:ale_fixers = { '*': ['remove_trailing_lines', 'trim_whitespace'] }
let g:ale_fix_on_save = 1

" Other Plugins
let g:polyglot_disabled = ['latex']
let g:vimtex_view_method='zathura'

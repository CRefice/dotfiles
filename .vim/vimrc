" General
filetype plugin indent on
set autoread
set hidden
set history=100
set modeline
set modelines=5
set nocompatible
syntax on
if has('mouse')
	set mouse=a
endif

" Undo and swapfiles
let $VIMHOME=expand('<sfile>:p:h')
let $DIR = $VIMHOME."/tmp"
set viminfo='20,\"90,h,%
set dir^=$DIR

set undodir=$HOME/.cache/vim/
set undofile
set undolevels=1000
set undoreload=10000

" Tabs, indent and text
set shiftwidth=2
set tabstop=2
set autoindent

" Interface
set cursorline
set laststatus=2
set lazyredraw
set linebreak
set noshowmode
set wildmenu

" Don't display vertical splits as separated by pipes
set fillchars+=vert:\

set completeopt-=preview
set diffopt=internal,filler,vertical,context:4,indent-heuristic,algorithm:patience

" Searching
set ignorecase
set smartcase
set hlsearch
set incsearch

" Mappings and shortcuts
set ttimeoutlen=10
let mapleader=','
let g:mapleader=','
let maplocalleader='\'

" Navigation mappings
map j gj
map k gk
noremap <Space> /

" Use sane behavior for yanking until end of line
map Y y$

map <leader>w :w<CR>
map <leader>q :qa<CR>
map <leader>x :xa<CR>
map <silent> <Leader>n :nohlsearch<CR>
map <silent> <Leader>f :ALEGoToDefinition<CR>

" Quick replace
nnoremap gs :%s/
" Replace selected text in whole buffer
xnoremap gs y:%sno/<C-r>"//g<Left><Left>

" Reindent whole buffer
nnoremap g= mmgg=G`m

map <leader>l :Files<CR>
map <leader>g :Find

" Colorscheme
if exists('+termguicolors')
  let &t_8f="\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b="\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

colorscheme horizon
unlet g:terminal_ansi_colors

" or this line
let g:lightline = {'colorscheme' : 'horizon'}

" Graphical interface
if has("gui_running")
	set guifont=Iosevka\ Term\ 12
	set lines=30 columns=100
	set guiheadroom=0

	set guioptions-=m  " Remove menu bar
	set guioptions-=T  " Remove toolbar
	set guioptions-=r  " Remove right-hand scroll bar
	set guioptions-=L  " Remove left-hand scroll bar
endif

" LSP Integration
let g:ale_lint_delay = 1000 " Reduce lint delay to once a second to save battery
let g:ale_echo_msg_format = '[%linter%] %s' " Include linter name in error statusline

let g:ale_fixers = { '*': ['remove_trailing_lines', 'trim_whitespace'] }
let g:ale_fix_on_save = 1

set omnifunc=ale#completion#OmniFunc

" Other Plugins
let g:polyglot_disabled = ['latex']
let g:vimtex_view_method='zathura'
let g:tex_flavor = 'latex'

" Customize fzf colors to match your color scheme
let g:fzf_colors =
            \ { 'fg':      ['fg', 'Normal'],
            \ 'bg':      ['bg', 'Normal'],
            \ 'hl':      ['fg', 'Comment'],
            \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
            \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
            \ 'hl+':     ['fg', 'Statement'],
            \ 'info':    ['fg', 'PreProc'],
            \ 'border':  ['fg', 'Ignore'],
            \ 'prompt':  ['fg', 'Conditional'],
            \ 'pointer': ['fg', 'Exception'],
            \ 'marker':  ['fg', 'Keyword'],
            \ 'spinner': ['fg', 'Label'],
            \ 'header':  ['fg', 'Comment'] }

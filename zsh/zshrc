# History management
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.
bindkey -v

# Autocompletion
autoload -Uz compinit; compinit
zstyle ':completion:*' menu select
setopt COMPLETE_ALIASES

# Prompt customization
autoload -Uz promptinit; promptinit
prompt spaceship
SPACESHIP_PROMPT_ORDER=(
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  venv          # virtualenv section
  exec_time     # Execution time
  line_sep      # Line break
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)
if [ -z "$DISPLAY" ]; then
	SPACESHIP_CHAR_SYMBOL='> '
else
	SPACESHIP_CHAR_SYMBOL='‚ùØ '
fi


# Base16 color scheme management
BASE16_SHELL=$HOME/dotfiles/base16-shell/
[[ -o interactive ]] && eval "$($BASE16_SHELL/profile_helper.sh)"

# Custom zsh functions
fpath=(~/.zsh/funcs ${fpath[@]})
autoload -Uz dev mkacd

# Useful aliases
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias g='git'

# Alias git (alias) to g(alias)
list=($(git config --get-regexp '^alias\.' \
	| sed 's/^alias\.//' \
	| cut -d' ' -f1))
for al in $list; do
	alias "g${al}"="git $al"
done

# Fzf scripts
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh
export FZF_DEFAULT_COMMAND='rg --files --follow --glob "!.git/*"'

# Syntax highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
